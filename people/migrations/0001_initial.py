# Generated by Django 5.0.3 on 2024-03-19 22:33

import django.db.models.deletion
import django.db.models.manager
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="nome")),
            ],
            options={
                "verbose_name": "sottocampo",
                "verbose_name_plural": "sottocampi",
            },
            managers=[
                ("objects_with_deleted", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ScoutGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="nome")),
                ("zone", models.CharField(max_length=255, verbose_name="zona")),
                ("region", models.CharField(max_length=255, verbose_name="regione")),
                (
                    "happiness_path",
                    models.CharField(
                        choices=[
                            ("FELICI_DI_ACCOGLIERE", "Felici di accogliere"),
                            (
                                "FELICI_DI_VIVERE_UNA_VITA_GIUSTA",
                                "Felici di vivere una vita giusta",
                            ),
                            (
                                "FELICI_DI_PRENDERSI_CURA_E_CUSTODIRE",
                                "Felici di prendersi cura e custodire",
                            ),
                            ("FELICI_DI_GENERARE_SPERANZA", "Felici di generare speranza"),
                            (
                                "FELICI_DI_FARE_ESPERIENZA_DI_DIO",
                                "Felici di fare esperienza di Dio",
                            ),
                            ("FELICI_DI_ESSERE_APPASSIONATI", "Felici di essere appassionati"),
                            ("FELICI_DI_LAVORARE_PER_LA_PACE", "Felici di lavorare per la pace"),
                            (
                                "FELICI_DI_ESSERE_PROFETI_IN_UN_MONDO_NUOVO",
                                "Felici di essere profeti in un mondo nuovo",
                            ),
                        ],
                        max_length=255,
                        verbose_name="sentiero della felicità",
                    ),
                ),
                (
                    "arrived_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="data di arrivo"),
                ),
            ],
            options={
                "verbose_name": "gruppo scout",
                "verbose_name_plural": "gruppi scout",
            },
            managers=[
                ("objects_with_deleted", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Squad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="nome")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="descrizione"),
                ),
            ],
            options={
                "verbose_name": "pattuglia",
                "verbose_name_plural": "pattuglie",
            },
            managers=[
                ("objects_with_deleted", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "agesci_id",
                    models.CharField(
                        db_index=True, max_length=255, unique=True, verbose_name="codice AGESCI"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(db_index=True, max_length=255, verbose_name="nome"),
                ),
                (
                    "last_name",
                    models.CharField(db_index=True, max_length=255, verbose_name="cognome"),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, unique=True, verbose_name="email"
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "codice_fiscale",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=16,
                        null=True,
                        unique=True,
                        verbose_name="codice fiscale",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, null=True, verbose_name="data di nascita"),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="indirizzo"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="città"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "scout_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="people.scoutgroup",
                    ),
                ),
                (
                    "squads",
                    models.ManyToManyField(blank=True, related_name="members", to="people.squad"),
                ),
            ],
            options={
                "verbose_name": "persona",
                "verbose_name_plural": "persone",
            },
            managers=[
                ("objects_with_deleted", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Subdistrict",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=255, unique=True, verbose_name="nome")),
                (
                    "district",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="people.district",
                        verbose_name="sottocampo",
                    ),
                ),
            ],
            options={
                "verbose_name": "contrada",
                "verbose_name_plural": "contrade",
            },
            managers=[
                ("objects_with_deleted", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name="scoutgroup",
            name="subdistrict",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="people.subdistrict",
                verbose_name="contrada",
            ),
        ),
    ]
